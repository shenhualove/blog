{"version":3,"sources":["/src/js/utils/common/fetch.js"],"names":[],"mappings":";;;;;;;;;;;AAIA,IAAM,IAAI,GAAC,yBAAyB,CAAC;;AAErC,IAAM,IAAI,GAAC;;AAEP,cAAU,EAAG,aAAa;AAC1B,eAAW,EAAE,cAAc;AAC3B,cAAU,EAAE,aAAa;;;;AAIzB,WAAO,EAAK,UAAU;AACtB,WAAO,EAAK,UAAU;;;;AAItB,QAAI,EAAQ,OAAO;;;;AAInB,QAAI,EAAQ,OAAO,EAEtB,CAAC;;;;AAEF,SAAS,KAAK,CAAC,OAAO,EAAC;;;AAGnB,QAAI,UAAU,GAAC;AACX,cAAM,EAAE,OAAO,CAAC,IAAI,GAAC,OAAO,CAAC,IAAI,GAAC,MAAM;AACxC,eAAO,EAAE;AACL,0BAAc,EAAC,OAAO,CAAC,WAAW,GAAC,OAAO,CAAC,WAAW,GAAC,mCAAmC;SAC7F;AACD,YAAI,EAAC,OAAO,CAAC,IAAI,GAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAC,EAAE;KAC7C;;;AAGD,QAAI,OAAO,GAAC,IAAI,OAAO,CAAC,IAAI,GAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,SAAK,CAAC,OAAO,EAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAS,GAAG,EAAE;AACzC,YAAI,GAAG,CAAC,EAAE,EAAE;;AAER,eAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAS,IAAI,EAAE;AAC3B,oBAAG,OAAO,OAAO,CAAC,OAAO,KAAG,UAAU,EAAC;AAAC,2BAAO,CAAC,OAAO,CAAC,IAAI,CAAC;iBAAC,CAAC;aAClE,CAAC,CAAC;SACN,MAAM;;AAEH,gBAAI,OAAO,CAAC;AACZ,oBAAO,GAAG,CAAC,MAAM;AACb,qBAAK,GAAG;AACJ,2BAAO,GAAC,iBAAiB,CAAC;AAC1B,0BAAM;AACV,qBAAK,GAAG;AACJ,2BAAO,GAAC,gBAAgB,CAAC;AACzB,0BAAM;AACV,qBAAK,GAAG;AACJ,2BAAO,GAAC,gBAAgB,CAAC;AACzB,0BAAM;AACV,qBAAK,GAAG;AACJ,2BAAO,GAAC,gBAAgB,CAAC;AACzB,0BAAM;AACV,qBAAK,GAAG;AACJ,2BAAO,GAAC,cAAc,CAAC;AACvB,0BAAM;AACV;AACI,2BAAO,GAAC,YAAY,CAAC;AACrB,0BAAM;AAAA,aACb;AACD,gBAAG,OAAO,OAAO,CAAC,KAAK,KAAG,UAAU,EAAC;AAAC,uBAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAC,OAAO,CAAC;aAAC,CAAC;SAC5E;KACJ,EAAE,UAAS,CAAC,EAAE;AACX,aAAK,CAAC,WAAW,CAAC,CAAC;KACtB,CAAC,CAAC;CAEN;;;AAGD,SAAS,OAAO,CAAC,IAAI,EAAC;AAClB,QAAI,QAAQ,GAAC,EAAE,CAAC;AAChB,SAAI,IAAI,GAAG,IAAI,IAAI,EAAC;AAChB,gBAAQ,IAAE,GAAG,GAAC,GAAG,GAAC,IAAI,CAAC,GAAG,CAAC,GAAC,GAAG,CAAC;KACnC;AACD,WAAO,QAAQ,CAAC;CACnB;;qBAEc,KAAK","file":"/src/js/utils/common/fetch.js","sourcesContent":["/**\n * Created by shenhua on 2017/4/22.\n */\n//接口域名\nconst host=\"http://www.shenhua.love\";\n//接口URL集合\nconst urls={\n    /*通用模块开始*/\n    studyLinks : \"/studyLinks\",//文档链接\n    friendLinks: \"/friendLinks\",//友情链接\n    columnList: \"/columnList\",//栏目列表\n    /*通用模块结束*/\n\n    /*首页开始*/\n    hotRead   : \"/hotRead\",//推荐集合\n    newPush   : \"/newPush\",//最新发布列表\n    /*首页结束*/\n\n    /*列表页开始*/\n    list      : \"/list\",//栏目列表页\n    /*列表页结束*/\n\n    /*列表页开始*/\n    page      : \"/page\",//栏目内容页页\n    /*列表页结束*/\n};\n\nfunction Fetch(options){\n\n    //请求头部参数\n    let sendHeader={\n        method: options.type?options.type:\"POST\",//发送方式\n        headers: {\n            \"Content-Type\":options.contentType?options.contentType:\"application/x-www-form-urlencoded\"\n        },//请求头部格式\n        body:options.data?sortKey(options.data):'' //发送数据\n    }\n\n    //初始化请求\n    let sendUrl=new Request(host+urls[options.url]);//构造请求资源\n    fetch(sendUrl,sendHeader).then(function(res) {\n        if (res.ok) {\n            //成功返回数据\n            res.json().then(function(data) {\n                if(typeof options.success===\"function\"){options.success(data)};\n            });\n        } else {\n            //返回错误信息\n            var errText;\n            switch(res.status){\n                case 403:\n                    errText=\"服务器禁止访问,请重新登录试试\";\n                    break;\n                case 404:\n                    errText=\"未找到服务器,请重新登录试试\";\n                    break;\n                case 500:\n                    errText=\"服务器未响应,请重新登录试试\";\n                    break;\n                case 503:\n                    errText=\"服务器不可用,请重新登录试试\";\n                    break;\n                case 504:\n                    errText=\"网关超时,请重新登录试试\";\n                    break;\n                default :\n                    errText=\"异常错误，请重新在试\";\n                    break;\n            }\n            if(typeof options.error===\"function\"){options.error(res.status,errText)};\n        }\n    }, function(e) {\n        alert(\"网络异常，请求错误\");\n    });\n\n}\n\n//对象转换为key=value&key=value\nfunction sortKey(data){\n    let tempData='';\n    for(let key in data){\n        tempData+=key+'='+data[key]+'&';\n    }\n    return tempData;\n}\n\nexport default Fetch;"]}