{"version":3,"sources":["/src/js/containers/admin/roles/index.js"],"names":[],"mappings":"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","file":"/src/js/containers/admin/roles/index.js","sourcesContent":["/**\r\n * Created by gaolei on 2017/3/8.\r\n */\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CenterTopNav from '../../components/public/centerTopNav';\r\nimport {browserHistory } from 'react-router';\r\nimport {publicFun} from '../../untils/publicFun';\r\nimport {setRolesState, rolesUserList,deleteRolesUser} from \"../../actions/roles/roles\";\r\nimport {rolesAddRoleHandle} from \"../../actions/roles/add\";\r\nimport Pagination from '../../components/public/pagination';\r\nimport PlugTableLoading from '../../components/public/plugTableLoading';\r\nimport {dialogHandle} from '../../actions/dialog';\r\n\r\nclass RoleManagerMain extends React.Component {\r\n\t\r\n\r\n    componentDidMount() {\r\n    \tthis.props._setRolesState({\r\n            submitFlag: true\r\n        });\r\n        //let currentTopMenu = this.props.login.Jurisdiction.System;\r\n        //let currentTopMenu = 'System';\r\n        //let pathName = this.props.location.pathname.replace(\"/\", \"\");\r\n        //let pathName = 'RoleManager';\r\n        /*this.props._setRolesState({\r\n            loadPageFlag: true            \r\n        });*/\r\n        let btnsList=new publicFun(this.props);\r\n        //获得用户角色权限\r\n        this.props._setRolesState({\r\n            btnList: btnsList.getJurisdiction()\r\n        });        \r\n        this.loadBtn(btnsList.getJurisdiction());\r\n        \r\n    }\r\n    \r\n    componentWillUnmount(){\r\n\t\tthis.props._setRolesState({ \t\t\t\r\n\t        loadPageFlag:true,//加载分页标识  true:加载  false:不加载\r\n\t        curPage:1,//当前页\r\n\t        totalSize:0,//总数据条数\r\n\t        list:[],\r\n\t        tableList:true,\r\n\t        selectList:[],\r\n\t        tableHead:true,\r\n\t        searchBtnShow:true,//查询按钮权限\r\n\t        addBtnShow:false,//添加按钮权限\r\n\t        editBtnShow:false,//编辑按钮权限\r\n\t        deleteBtnShow:false,//删除按钮权限\r\n\t        btnList:\"\",//按钮权限字符串\r\n\t        nullData:\"\",\r\n\t        tbodyList: 'loading'//表格加载控件\r\n      });\t\t\r\n\t}\r\n    \r\n    \r\n\r\n    //文本框改变事件\r\n    roleNameChange(event) {\r\n        this.props._setRolesState({\r\n            roleName: event.target.value\r\n        });\r\n    }\r\n    //加载按钮\r\n    loadBtn(btnList) {\r\n        //let btnList=this.props.roles.btnList.split(\",\");\r\n        \r\n        \r\n        btnList = (btnList==\"\" || btnList==undefined)?[]:btnList.split(',');\r\n        let searchFlag = false,\r\n            addFlag = false,\r\n            editFlag = false,\r\n            deleteFlag = false;\r\n        btnList.map((item, index)=> {\r\n            let type = item.split(\":\")[1];\r\n            if (type == \"add\") {\r\n                addFlag = true;\r\n            } else if (type == \"edit\") {\r\n                editFlag = true;\r\n            } else if (type == \"search\") {\r\n                searchFlag = true;\r\n            } else if (type == \"del\") {\r\n                deleteFlag = true;\r\n            }\r\n        });\r\n        //初始化用户角色权限\r\n        this.props._setRolesState({\r\n            addBtnShow: addFlag,//添加按钮权限\r\n            editBtnShow: editFlag,//编辑按钮权限\r\n            deleteBtnShow: deleteFlag//删除按钮权限\r\n        });\r\n\r\n        let options={\r\n        \tsearchText: this.props.roles.searchText,\r\n            curPage: this.props.roles.curPage,\r\n            pageSize: this.props.roles.pageLimit,\r\n            errorCallback:()=>{this.errorCallback()}\r\n        }\r\n        \r\n        this.loadData(options);\r\n    }\r\n    \r\n    showThead(){\r\n    \tlet tableHead = \"\";\r\n        if (!this.props.roles.editBtnShow && !this.props.roles.deleteBtnShow) {\r\n            tableHead = (\r\n                <tr>\r\n                    <th width=\"50%\">角色名称</th>\r\n                    <th width=\"50%\">角色描述</th>\r\n                </tr>\r\n            )\r\n\r\n        } else {\r\n            tableHead = (\r\n                <tr>\r\n                    <th width=\"30%\">角色名称</th>\r\n                    <th  width=\"50%\">角色描述</th>\r\n                    <th width=\"20%\">操作</th>\r\n                </tr>\r\n            )\r\n        }\r\n        return tableHead;       \r\n    }\r\n    \r\n\r\n    //加载数据\r\n    loadData(options) {\r\n    \tthis.props._setRolesState({\r\n\t\t\ttbodyList:\"loading\"\r\n\t\t});\r\n        this.props._rolesUserList(options);\r\n    }\r\n    errorCallback(){\r\n\t\tthis.props._setRolesState({\r\n            list:[],\r\n            totalSize:0,\r\n            tbodyList:\"fail\"\r\n       });\r\n\t}\r\n    //添加角色\r\n    addRole() {\r\n        this.props._rolesAddRoleHandle({\r\n            operationType:\"add\",\r\n            roleCode:\"\",\r\n            roleId:\"\",\r\n            logListShow:[],\r\n            logListData:[],\r\n            treeData:[],\r\n            roleName:\"\",//角色名称\r\n    \t\troleDescribe:\"\",//角色描述\r\n        });\r\n        \r\n       browserHistory.push('/System/addRole/'+\"add\");\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n    //调用分页加载\r\n    pageNavClick(n,pageSize){\r\n        \r\n        this.props._setRolesState({\r\n            curPage: n,\r\n            pageLimit:pageSize\r\n\r\n        });\r\n        let options={\r\n        \tsearchText: this.props.roles.searchText,\r\n            curPage: n,\r\n            pageSize: pageSize,\r\n            errorCallback:()=>{this.errorCallback()}\r\n        }       \r\n        this.loadData(options);\r\n    }\r\n\r\n    //查询按钮\r\n    searchBtn() {\r\n    \t this.props._setRolesState({\r\n            searchText: this.props.roles.roleName,\r\n            curPage:1,\r\n            totalSize: 0\r\n       });        \r\n    \tlet options={\r\n        \tsearchText: this.props.roles.roleName,\r\n            curPage: 1,\r\n            pageSize: this.props.roles.pageLimit,\r\n            errorCallback:()=>{this.errorCallback()}\r\n        }\r\n        this.loadData(options);\r\n    }\r\n\r\n    //编辑\r\n    editFun(roleCode, id) {\r\n        this.props._rolesAddRoleHandle({\r\n        \toperationType:\"edit\",            \r\n            roleCode:roleCode,\r\n            roleId:id\r\n        });\r\n        browserHistory.push('/System/addRole/'+roleCode);\r\n        //this.props.history.pushState(null, \"addRole\", {type: \"edit\", roleCode: roleCode, roleId: id});\r\n\r\n    }\r\n\r\n    //删除\r\n    deleteFun(id,roleName) {\r\n    \tconsole.log(this.props.roles.submitFlag);\r\n    \tif(!this.props.roles.submitFlag){\r\n\t\t\tthis.props._dialogHandle({\r\n\t\t\t\tshow:true,\r\n\t\t\t\ttype:\"loading\",\r\n\t\t\t\tcontent:\"提交中\"\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t}\r\n    \t\r\n    \tlet options={\r\n        \tsearchText: this.props.roles.searchText,\r\n            curPage: this.props.roles.curPage,\r\n            pageSize: this.props.roles.pageLimit,\r\n            errorCallback:()=>{this.errorCallback()}\r\n        }\r\n    \t\r\n        let _that=this;\r\n        this.props._dialogHandle({\r\n            show:true,\r\n            content:'你确定要删除该角色吗？',\r\n            type:\"tips\",\r\n            tipsType:\"confirm\",\r\n            success:function(){\r\n            \t_that.props._setRolesState({\r\n\t\t            submitFlag: false\r\n\t\t        });\r\n                _that.props._deleteRolesUser({\r\n                    id:id,\r\n                    roleName:roleName,\r\n                    callBack:()=>{\r\n                    \t_that.props._setRolesState({\r\n\t\t\t\t            submitFlag: true\r\n\t\t\t\t        });\r\n                        _that.loadData(options);\r\n                    }\r\n                });\r\n                return true;\r\n                \r\n            },fail:function(){\r\n\t\t\t\t_that.props._setRolesState({\r\n\t\t\t\t\tsubmitFlag:true\r\n\t\t\t\t});\r\n\t\t\t}.bind(_that)\r\n        });\r\n    }\r\n    \r\n    showTbody(list,type){\r\n    \tlet resultTable = [];\r\n        let _that = this;\r\n    \tif(type==\"success\"){\r\n\t\t\tlist.map((item,i)=>{\r\n\t\t\t\tif (!this.props.roles.editBtnShow && !this.props.roles.deleteBtnShow){\r\n\t\t\t\t\tresultTable.push(\r\n\t\t\t\t\t\t<tr key={i}>\r\n\t\t                    <td>{item.roleName}</td>\r\n\t\t                    <td>{item.roleDesc}</td>\r\n\t\t                </tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif (item.roleName == \"超级管理员\" || item.roleName == \"普通用户\") {\r\n\t\t\t\t\t\tresultTable.push(\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t                    <td>{item.roleName}</td>\r\n\t\t                            <td>{item.roleDesc}</td>\r\n\t\t                            <td>\r\n\t\t\r\n\t\t\r\n\t\t                            </td>\r\n\t\t\t                </tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresultTable.push(\r\n\t\t\t\t\t\t\t<tr key={i}>\r\n\t\t\t                    <td>{item.roleName}</td>\r\n\t                            <td>{item.roleDesc}</td>\r\n\t                            <td>\r\n\t                                <span className=\"btn\"\r\n\t                                      style={{display: this.props.roles.editBtnShow ? \"inline-block\" : \"none\"}}\r\n\t                                      onClick={this.editFun.bind(this, item.roleCode, item.id)}>编辑</span>\r\n\t                                <span className=\"btn\"\r\n\t                                      style={{display: this.props.roles.deleteBtnShow ? \"inline-block\" : \"none\"}}\r\n\t                                      onClick={this.deleteFun.bind(this, item.id,item.roleName)}>删除</span>\r\n\t\r\n\t                            </td>\r\n\t\t\t                </tr>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}else{\t\r\n\t\t\tif (!this.props.roles.editBtnShow && !this.props.roles.deleteBtnShow){\r\n\t\t\t\tresultTable=(\t\t\t\t\t\r\n\t\t            <PlugTableLoading status={type} colSpanCount='2' classNameEnter=\"\"/>\t                \r\n\t\t\t\t);\r\n\t\t\t}else{\r\n\t\t\t\tresultTable=(\t\t\t\t\t\r\n\t\t            <PlugTableLoading status={type} colSpanCount='3' classNameEnter=\"\"/>\t                \r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n        \r\n        /*if(this.props.roles.list==\"数据请求中\"){\r\n        \tresultTable.push(\r\n\t\t\t\t<tr key=\"0\"><td colSpan=\"3\"></td></tr>\r\n\t\t\t)\r\n        }else{\r\n        \tif(this.props.roles.list.length>0){\r\n\t\t\t\tthis.props.roles.list.map((item, i)=> {\r\n\t\t            if (!this.props.roles.editBtnShow && !this.props.roles.deleteBtnShow) {//编辑按钮和删除按钮都没有权限 直接删除按钮列\r\n\t\t                resultTable.push(\r\n\t\t                    <tr key={i}>\r\n\t\t                        <td>{item.roleName}</td>\r\n\t\t                        <td>{item.roleDesc}</td>\r\n\t\t                    </tr>\r\n\t\t                )\r\n\t\t            } else {\r\n\t\t                if (item.roleName == \"超级管理员\" || item.roleName == \"普通用户\") {\r\n\t\t                    resultTable.push(\r\n\t\t                        <tr key={i}>\r\n\t\t                            <td>{item.roleName}</td>\r\n\t\t                            <td>{item.roleDesc}</td>\r\n\t\t                            <td>\r\n\t\t\r\n\t\t\r\n\t\t                            </td>\r\n\t\t                        </tr>\r\n\t\t                    )\r\n\t\t                } else {\r\n\t\t                    resultTable.push(\r\n\t\t                        <tr key={i}>\r\n\t\t                            <td>{item.roleName}</td>\r\n\t\t                            <td>{item.roleDesc}</td>\r\n\t\t                            <td>\r\n\t\t                                <span className=\"btn\"\r\n\t\t                                      style={{display: this.props.roles.editBtnShow ? \"inline-block\" : \"none\"}}\r\n\t\t                                      onClick={this.editFun.bind(this, item.roleCode, item.id)}>编辑</span>\r\n\t\t                                <span className=\"btn\"\r\n\t\t                                      style={{display: this.props.roles.deleteBtnShow ? \"inline-block\" : \"none\"}}\r\n\t\t                                      onClick={this.deleteFun.bind(this, item.id,item.roleName)}>删除</span>\r\n\t\t\r\n\t\t                            </td>\r\n\t\t                        </tr>\r\n\t\t                    )\r\n\t\t                }\r\n\t\t\r\n\t\t            }\r\n\t\t\r\n\t\t        });\r\n\t\t\t}else{\r\n\t\t\t\tif (!this.props.roles.editBtnShow && !this.props.roles.deleteBtnShow) {//编辑按钮和删除按钮都没有权限 直接删除按钮列\r\n\t                resultTable.push(\r\n\t                    <tr key=\"0\">\r\n\t                       <td colSpan=\"2\">暂无数据</td> \r\n\t                    </tr>\r\n\t                    \r\n\t                )\r\n\t            }else{\r\n\t            \tresultTable.push(\r\n\t\t\t\t\t\t<tr key=\"0\"><td colSpan=\"3\">暂无数据</td></tr>\r\n\t\t\t\t\t)\r\n\t            }\r\n\t\t\t\t\r\n\t\t\t}\r\n     \t}*/\t\t\r\n\t\treturn resultTable;\r\n    }\r\n\r\n    //处理数据\r\n    dealData(data) {\r\n\r\n        this.props._setRolesState({\r\n        \ttableHead:true,\r\n            tableList: true            \r\n        });\r\n\r\n        /*if (this.props.roles.loadPageFlag) {\r\n            this.loadPage();\r\n        }*/\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"height100p\">\r\n                <CenterTopNav title=\"角色管理\" parentList={[{name:\"系统管理\"}]}/>\r\n                <div className=\"height100pY role-manager-content\">\r\n                    <div className=\"form-content\">\r\n                        <span>角色名称:</span>\r\n                        <input type=\"text\" value={this.props.roles.roleName} className=\"role-name\"\r\n                               onChange={this.roleNameChange.bind(this)} onBlur={this.roleNameChange.bind(this)} placeholder=\"请输入\"/>\r\n                    </div>\r\n                    <div className=\"btn-content\">\r\n                        <span className=\"btn\"\r\n                              style={{display: this.props.roles.searchBtnShow ? \"inline-block\" : \"none\"}}\r\n                              onClick={this.searchBtn.bind(this)}>查询</span>\r\n                        <span className=\"btn\" style={{display: this.props.roles.addBtnShow ? \"inline-block\" : \"none\"}}\r\n                              onClick={this.addRole.bind(this)}>新增</span>\r\n\r\n                    </div>\r\n\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                        {this.showThead()}\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.showTbody(this.props.roles.list,this.props.roles.tbodyList)}\r\n                        </tbody>\r\n                    </table>\r\n                    <Pagination\r\n                        curPage={this.props.roles.curPage}\r\n                        totalNumber={this.props.roles.totalSize}\r\n                        pageLimt={this.props.roles.pageLimit}\r\n                        pageClick={this.pageNavClick.bind(this)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return state;\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        _setRolesState: (options)=> {\r\n            dispatch(setRolesState(options));\r\n        },        \r\n        _rolesUserList: (options)=> {\r\n            dispatch(rolesUserList(options));\r\n        },\r\n        _rolesAddRoleHandle: (options)=> {\r\n            dispatch(rolesAddRoleHandle(options));\r\n        },\r\n        _deleteRolesUser: (options)=> {\r\n            dispatch(deleteRolesUser(options));\r\n        },\r\n        _dialogHandle :(options)=>{\r\n            dispatch(dialogHandle(options));\r\n        }\r\n    }\r\n}\r\nconst RoleManager = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(RoleManagerMain);\r\n\r\nexport default  RoleManager;"]}